<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="utf-8">
        <title>D3 Page Template</title>
        <script type="text/javascript" src="/javascripts/d3.v3.js"></script>
        <style>
            body {
                margin-top: 20px;
                margin-left: 20px;
                margin-right: 30%;
                font-family: 'Avenir';
                font-size: 18px; 
                color: "#222";
            }

            .axis path,
            .axis line {
                fill: none;
                stroke: black;
                shape-rendering: crispEdges;
            }

/*            these are SVG properties that we are styling here hence fill rather than color, etc*/

            .axis text {
                font-family: sans-serif;
                font-size: 11px;
            }

            svg text {
                pointer-events: none;
            }

        </style>
    </head>
    <body>

    <p>This section introduces interactivity and event listeners.  Here, the orange colour mouseover effect is achieved through D3 and Javascript instead.  The text appended to the bars labelling the data ignores mouse-events.  This is important in ensuring that the bar changes colour, even when the mouse is technically hovering over the text element.  An alternative method would be to bind the event listeners to a grouping of elements.</p>

    <script type="text/javascript">

        //Width and height
        var w = 600;
        var h = 250;
        
        var dataset = [ 5, 10, 13, 19, 21, 25, 22, 18, 15, 13,
                        11, 12, 15, 20, 18, 17, 16, 18, 23, 25 ];

        var xScale = d3.scale.ordinal()
                        .domain(d3.range(dataset.length))
                        .rangeRoundBands([0, w], 0.05);

        var yScale = d3.scale.linear()
                        .domain([0, d3.max(dataset)])
                        .range([0, h]);
        
        //Create SVG element
        var svg = d3.select("body")
                    .append("svg")
                    .attr("width", w)
                    .attr("height", h);

        //Create bars
        svg.selectAll("rect")
            .data(dataset)
            .enter()
            .append("rect")
            .attr("x", function(d, i) {
                return xScale(i);
            })
            .attr("y", function(d) {
                return h - yScale(d);
            })
            .attr("width", xScale.rangeBand())
            .attr("height", function(d) {
                return yScale(d);
            })
            .attr("fill", function(d) {
                return "rgb(0, 0, " + (d * 10) + ")";
            })
            .on("mouseover", function() {
                d3.select(this)
                    .attr("fill", "orange");
            })
            .on("mouseout", function(d) {
                d3.select(this)
                    .transition()
                    .duration(250)
                    .attr("fill", "rgb(0, 0, " + (d * 10) + ")");
            })
            .on("click", function(d) {
                console.log(d);
                sortBars();
            });

        // within the mouseover listener, 'this' helps us reference the 
        // applicable element within the context of an anonymous function.
        // mouseout helps revert back to a blue tone.

        //Create labels
        svg.selectAll("text")
           .data(dataset)
           .enter()
           .append("text")
           .text(function(d) {
                return d;
           })
           .attr("text-anchor", "middle")
           .attr("x", function(d, i) {
                return xScale(i) + xScale.rangeBand() / 2;
           })
           .attr("y", function(d) {
                return h - yScale(d) + 14;
           })
           .attr("font-family", "sans-serif")
           .attr("font-size", "11px")
           .attr("fill", "white");
            

    </script>
    </body>
</html>