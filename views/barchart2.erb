<!DOCTYPE html>
<style>

.chart rect {
  fill: steelblue;
}

.chart text {
  fill: white;
  font: 10px sans-serif;
  text-anchor: end;
}

</style>

<svg class="chart">
</svg>

<script src="http://d3js.org/d3.v3.min.js"></script>

<script>

var width = 420,
    barHeight = 20;

var x = d3.scale.linear()
    .range([0, width]);

var chart = d3.select(".chart")
    .attr("width", width);

d3.tsv("./data/part2.tsv", type, function(error, data) {
  x.domain([0, d3.max(data, function(d) { return d.value; })]);
// type is defined below and ensures data that should be a string is a string, integer is an integer, etc since otherwise all values default to strings
// this function is loading the data and following are call-backs to execute when data has downloaded.

  chart.attr("height", barHeight * data.length);

  var bar = chart.selectAll("g")
      .data(data)
    .enter().append("g")
      .attr("transform", function(d, i) { return "translate(0," + i * barHeight + ")"; });

  bar.append("rect")
      .attr("width", function(d) { return x(d.value); })
      .attr("height", barHeight - 1);

  // d.value since d object also holds a name column now, so need to specify the appropriate column in tsv file.

  bar.append("text")
      .attr("x", function(d) { return x(d.value) - 3; })
      .attr("y", barHeight / 2)
      .attr("dy", ".35em")
      .text(function(d) { return d.value; });
});

function type(d) {
  d.value = +d.value; // ensures the value column in tsv value is treated as an integer, not a string
  return d;
}

</script>