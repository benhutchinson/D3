<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="utf-8">
        <title>D3 Page Template</title>
        <script type="text/javascript" src="/javascripts/d3.v3.js"></script>
        <style>
            body {
                margin-top: 20px;
                margin-left: 20px;
                margin-right: 30%;
                font-family: 'Avenir';
                font-size: 18px; 
                color: "#222";
            }

            .axis path,
            .axis line {
                fill: none;
                stroke: black;
                shape-rendering: crispEdges;
            }

/*            these are SVG properties that we are styling here hence fill rather than color, etc*/

            .axis text {
                font-family: sans-serif;
                font-size: 11px;
            }
        </style>
    </head>
    <body>

    <p>This chapter introduced axes and again, dynamic scaling.  Here, a random dataset of 50 datapoints is generated through Javascript therefore if you refresh the page, a different chart will be drawn.  The axes replace the data labels from previous slides, which have been commented out within the code.</p>

    <script type="text/javascript">

    var scatter_data = [];

    var numDataPoints = 50;

    var xRange = Math.random() * 1000;
    var yRange = Math.random() * 1000; 

    for (var i = 0; i < numDataPoints; i++) {
        var newNumber1 = Math.floor(Math.random() * xRange);
        var newNumber2 = Math.floor(Math.random() * yRange);
        scatter_data.push([newNumber1, newNumber2]);
    }

    var scatW = 500;
    var scatH = 300;

    var padding = 30; 

    var xScale = d3.scale.linear()
                        .domain([0, d3.max(scatter_data, function(d) { return d[0]; })])
                        .range([padding, scatW-padding*2]);

    var yScale = d3.scale.linear()
                        .domain([0, d3.max(scatter_data, function(d) { return d[1]; })])
                        .range([scatH-padding, padding]);

    var rScale = d3.scale.linear()
                        .domain([0, d3.max(scatter_data, function(d) { return d[1]; })])
                        .range([2, 5]);

    var xAxis = d3.svg.axis()
                        .scale(xScale)
                        .orient("bottom")
                        .ticks(5);

    var yAxis = d3.svg.axis()
                        .scale(yScale)
                        .orient("left")
                        .ticks(5);

    var scatterSVG = d3.select("body")
            .append("svg")
            .attr("width", scatW)
            .attr("height", scatH);

    scatterSVG.selectAll("circle")
                .data(scatter_data)
                .enter()
                .append("circle")
                .attr("cx", function(d) { return xScale(d[0]); })
                .attr("cy", function(d) { return yScale(d[1]); })
                .attr("r", function(d) { return rScale(d[1]); });

    // scatterSVG.selectAll("text")
    //             .data(scatter_data)
    //             .enter()
    //             .append("text")
    //             .text(function(d) {
    //                 return d[0] + "," + d[1];
    //             })
    //             .attr("x", function(d) {
    //                 return xScale(d[0]);
    //             })
    //             .attr("y", function(d){
    //                 return yScale(d[1]);
    //             })
    //             .attr("font-family", "sans-serif")
    //             .attr("font-size", "11px")
    //             .attr("fill", "red");

    scatterSVG.append("g")
                .attr("class", "axis")
                .attr("transform", "translate(0," + (scatH - padding) + ")")
                .call(xAxis);

    scatterSVG.append("g")
                .attr("class", "axis")
                .attr("transform", "translate(" + padding + ",0)")
                .call(yAxis);

    </script>
    </body>
</html>