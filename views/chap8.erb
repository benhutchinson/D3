<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="utf-8">
        <title>D3 Page Template</title>
        <script type="text/javascript" src="/javascripts/d3.v3.js"></script>
        <style>
            body {
                margin-top: 20px;
                margin-left: 20px;
                margin-right: 30%;
                font-family: 'Avenir';
                font-size: 18px; 
                color: "#222";
            }
        </style>
    </head>
    <body>

    <p>This chapter introduced dynamic scaling.  The scatterplot, data positioning, and circle radii are all computed relative to the range of the datapoints and the chosen size of the SVG canvas.</p>


    <script type="text/javascript">

    var scatter_data = [
                [5, 20],
                [480, 90],
                [250, 50],
                [100, 33],
                [330, 95],
                [410, 12], 
                [475, 44], 
                [25, 67], 
                [85, 21], 
                [220, 88],
                [600, 150]
              ];

    var scatW = 500;
    var scatH = 300;

    var padding = 20; 

    var xScale = d3.scale.linear()
                        .domain([0, d3.max(scatter_data, function(d) { return d[0]; })])
                        .range([padding, scatW-padding*2]);

    var yScale = d3.scale.linear()
                        .domain([0, d3.max(scatter_data, function(d) { return d[1]; })])
                        .range([scatH-padding, padding]);

    var rScale = d3.scale.linear()
                        .domain([0, d3.max(scatter_data, function(d) { return d[1]; })])
                        .range([2, 5]);

    var scatterSVG = d3.select("body")
            .append("svg")
            .attr("width", scatW)
            .attr("height", scatH);

    scatterSVG.selectAll("circle")
                .data(scatter_data)
                .enter()
                .append("circle")
                .attr("cx", function(d) { return xScale(d[0]); })
                .attr("cy", function(d) { return yScale(d[1]); })
                .attr("r", function(d) { return rScale(d[1]); });

    scatterSVG.selectAll("text")
                .data(scatter_data)
                .enter()
                .append("text")
                .text(function(d) {
                    return d[0] + "," + d[1];
                })
                .attr("x", function(d) {
                    return xScale(d[0]);
                })
                .attr("y", function(d){
                    return yScale(d[1]);
                })
                .attr("font-family", "sans-serif")
                .attr("font-size", "11px")
                .attr("fill", "red");
    </script>
    </body>
</html>