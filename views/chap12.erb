<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="utf-8">
        <title>D3 Page Template</title>
        <script type="text/javascript" src="/javascripts/d3.v3.js"></script>
        <style>
            body {
                margin-top: 20px;
                margin-left: 20px;
                margin-right: 30%;
                font-family: 'Avenir';
                font-size: 18px; 
                color: "#222";
            }

        </style>
    </head>
    <body>

    <p>This section introduces the GeoJSON geographic data-set.</p>

    <script type="text/javascript">

    var w = 500;
    var h = 300;

    // the projection reflects that fact the the globe is 3D but we are 
    // mapping to a 2D surface
    // albersUsa is actually the default projection for d3.path.geo()
    // but if we specify it here, we can apply transformations. 
    // for example, here, we are able to translate the projection to the centre
    // of the image.
    // we also scale it down (vs the default scale of 1000)

    var projection = d3.geo.albersUsa()
                       .translate([w/2, h/2])
                       .scale([500]);

    // path generator subsequently calls in the projection.

    var path = d3.geo.path()
                    .projection(projection);;

    var svg = d3.select("body")
        .append("svg")
        .attr("width", w)
        .attr("height", h);

    // binds external data here and creates a new path for each feature
    // the last attribute line is the path generator
    // i.e. it takes the geodata and creates the svg code
    // nb. json.features refers to the features key in the json file that is loaded
    // within the features key, there is an array of arrays.

    d3.json("data/us-states.json", function(json) {

        svg.selectAll("path")
            .data(json.features)
            .enter()
            .append("path")
            .attr("d", path)
            .style("fill", "steelblue");

    });

    </script>
    </body>
</html>