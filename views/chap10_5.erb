<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="utf-8">
        <title>D3 Page Template</title>
        <script type="text/javascript" src="/javascripts/d3.v3.js"></script>
        <style>
            body {
                margin-top: 20px;
                margin-left: 20px;
                margin-right: 30%;
                font-family: 'Avenir';
                font-size: 18px; 
                color: "#222";
            }

            svg text {
                pointer-events: none;
            }

            rect {
                -moz-transition: all 0.3s;
                -o-transition: all 0.3s;
                -webkit-transition: all 0.3s;
                transition: all 0.3s;
            }

            rect:hover {
                fill: orange;
            }

        </style>
    </head>
    <body>

    <p>This section offers a basic tooltip that is styled, created, and destroyed within the SVG element.</p>

    <script type="text/javascript">

        var w = 600;
        var h = 250;
        
        var dataset = [ 5, 10, 13, 19, 21, 25, 22, 18, 15, 13,
                        11, 12, 15, 20, 18, 17, 16, 18, 23, 25 ];

        var xScale = d3.scale.ordinal()
                        .domain(d3.range(dataset.length))
                        .rangeRoundBands([0, w], 0.05);

        var yScale = d3.scale.linear()
                        .domain([0, d3.max(dataset)])
                        .range([0, h]);

        var svg = d3.select("body")
                    .append("svg")
                    .attr("width", w)
                    .attr("height", h);

        svg.selectAll("rect")
            .data(dataset)
            .enter()
            .append("rect")
            .attr("x", function(d, i) {
                return xScale(i);
            })
            .attr("y", function(d) {
                return h - yScale(d);
            })
            .attr("width", xScale.rangeBand())
            .attr("height", function(d) {
                return yScale(d);
            })
            .attr("fill", function(d) {
                return "rgb(0, 0, " + (d * 10) + ")";
            })
            .on("mouseover", function(d) {
                var xPosition = parseFloat(d3.select(this).attr("x")) + xScale.rangeBand()/2; 
                var yPosition = parseFloat(d3.select(this).attr("y")) + 14; 

                svg.append("text")
                    .attr("id", "tooltip")
                    .attr("x", xPosition)
                    .attr("y", yPosition)
                    .attr("text-anchor", "middle")
                    .attr("font-family", "sans-serif")
                    .attr("font-size", "11px")
                    .attr("font-weight", "bold")
                    .attr("fill", "black")
                    .text(d);
            })
            .on("mouseout", function() {
                d3.select("#tooltip").remove();
            });


        // here the tooltip is created as an SVG element that we have manually
        // styled.
        // note the positioning, relative to each individual bar and how it uses
        // parseFloat to pull a text string into a floating point value for computation.
        // the element is given an id so that the tooltip can be deleted on mouseout.


    </script>
    </body>
</html>